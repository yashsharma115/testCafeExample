"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    dispatchEvent: 'dispatch-event',
    click: 'click',
    rightClick: 'right-click',
    doubleClick: 'double-click',
    drag: 'drag',
    dragToElement: 'drag-to-element',
    hover: 'hover',
    scroll: 'scroll',
    scrollBy: 'scroll-by',
    scrollIntoView: 'scroll-into-view',
    typeText: 'type-text',
    selectText: 'select-text',
    selectTextAreaContent: 'select-text-area-content',
    selectEditableContent: 'select-editable-content',
    pressKey: 'press-key',
    wait: 'wait',
    navigateTo: 'navigate-to',
    setFilesToUpload: 'set-files-to-upload',
    clearUpload: 'clear-upload',
    executeClientFunction: 'execute-client-function',
    executeSelector: 'execute-selector',
    takeScreenshot: 'take-screenshot',
    takeElementScreenshot: 'take-element-screenshot',
    takeScreenshotOnFail: 'take-screenshot-on-fail',
    prepareBrowserManipulation: 'prepare-browser-manipulation',
    showAssertionRetriesStatus: 'show-assertion-retries-status',
    hideAssertionRetriesStatus: 'hide-assertion-retries-status',
    setBreakpoint: 'set-breakpoint',
    resizeWindow: 'resize-window',
    resizeWindowToFitDevice: 'resize-window-to-fit-device',
    maximizeWindow: 'maximize-window',
    switchToIframe: 'switch-to-iframe',
    switchToMainWindow: 'switch-to-main-window',
    openWindow: 'open-window',
    closeWindow: 'close-window',
    getCurrentWindow: 'get-current-window',
    getCurrentWindows: 'get-current-windows',
    getCurrentCDPSession: 'get-current-c-d-p-session',
    switchToWindow: 'switch-to-window',
    switchToWindowByPredicate: 'switch-to-window-by-predicate',
    switchToParentWindow: 'switch-to-parent-window',
    switchToPreviousWindow: 'switch-to-previous-window',
    setNativeDialogHandler: 'set-native-dialog-handler',
    getNativeDialogHistory: 'get-native-dialog-history',
    getBrowserConsoleMessages: 'get-browser-console-messages',
    getActiveElement: 'get-active-element',
    setTestSpeed: 'set-test-speed',
    setPageLoadTimeout: 'set-page-load-timeout',
    debug: 'debug',
    assertion: 'assertion',
    useRole: 'useRole',
    testDone: 'test-done',
    backupStorages: 'backup-storages',
    executeExpression: 'execute-expression',
    executeAsyncExpression: 'execute-async-expression',
    unlockPage: 'unlock-page',
    closeChildWindowOnFileDownloading: 'close-child-window-on-file-downloading',
    recorder: 'recorder',
    prepareClientEnvironmentInDebugMode: 'prepare-client-environment-in-debug-mode',
    getCookies: 'get-cookies',
    setCookies: 'set-cookies',
    deleteCookies: 'delete-cookies',
    getProxyUrl: 'get-proxy-url',
    request: 'request',
    skipJsErrors: 'skip-js-errors',
    addRequestHooks: 'add-request-hooks',
    removeRequestHooks: 'remove-request-hooks',
    runCustomAction: 'run-custom-action',
    report: 'report',
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0LXJ1bi9jb21tYW5kcy90eXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLCtDQUErQztBQUMvQyxnRUFBZ0U7O0FBRWhFLGtCQUFlO0lBQ1gsYUFBYSxFQUF3QixnQkFBZ0I7SUFDckQsS0FBSyxFQUFnQyxPQUFPO0lBQzVDLFVBQVUsRUFBMkIsYUFBYTtJQUNsRCxXQUFXLEVBQTBCLGNBQWM7SUFDbkQsSUFBSSxFQUFpQyxNQUFNO0lBQzNDLGFBQWEsRUFBd0IsaUJBQWlCO0lBQ3RELEtBQUssRUFBZ0MsT0FBTztJQUM1QyxNQUFNLEVBQStCLFFBQVE7SUFDN0MsUUFBUSxFQUE2QixXQUFXO0lBQ2hELGNBQWMsRUFBdUIsa0JBQWtCO0lBQ3ZELFFBQVEsRUFBNkIsV0FBVztJQUNoRCxVQUFVLEVBQTJCLGFBQWE7SUFDbEQscUJBQXFCLEVBQWdCLDBCQUEwQjtJQUMvRCxxQkFBcUIsRUFBZ0IseUJBQXlCO0lBQzlELFFBQVEsRUFBNkIsV0FBVztJQUNoRCxJQUFJLEVBQWlDLE1BQU07SUFDM0MsVUFBVSxFQUEyQixhQUFhO0lBQ2xELGdCQUFnQixFQUFxQixxQkFBcUI7SUFDMUQsV0FBVyxFQUEwQixjQUFjO0lBQ25ELHFCQUFxQixFQUFnQix5QkFBeUI7SUFDOUQsZUFBZSxFQUFzQixrQkFBa0I7SUFDdkQsY0FBYyxFQUF1QixpQkFBaUI7SUFDdEQscUJBQXFCLEVBQWdCLHlCQUF5QjtJQUM5RCxvQkFBb0IsRUFBaUIseUJBQXlCO0lBQzlELDBCQUEwQixFQUFXLDhCQUE4QjtJQUNuRSwwQkFBMEIsRUFBVywrQkFBK0I7SUFDcEUsMEJBQTBCLEVBQVcsK0JBQStCO0lBQ3BFLGFBQWEsRUFBd0IsZ0JBQWdCO0lBQ3JELFlBQVksRUFBeUIsZUFBZTtJQUNwRCx1QkFBdUIsRUFBYyw2QkFBNkI7SUFDbEUsY0FBYyxFQUF1QixpQkFBaUI7SUFDdEQsY0FBYyxFQUF1QixrQkFBa0I7SUFDdkQsa0JBQWtCLEVBQW1CLHVCQUF1QjtJQUM1RCxVQUFVLEVBQTJCLGFBQWE7SUFDbEQsV0FBVyxFQUEwQixjQUFjO0lBQ25ELGdCQUFnQixFQUFxQixvQkFBb0I7SUFDekQsaUJBQWlCLEVBQW9CLHFCQUFxQjtJQUMxRCxvQkFBb0IsRUFBaUIsMkJBQTJCO0lBQ2hFLGNBQWMsRUFBdUIsa0JBQWtCO0lBQ3ZELHlCQUF5QixFQUFZLCtCQUErQjtJQUNwRSxvQkFBb0IsRUFBaUIseUJBQXlCO0lBQzlELHNCQUFzQixFQUFlLDJCQUEyQjtJQUNoRSxzQkFBc0IsRUFBZSwyQkFBMkI7SUFDaEUsc0JBQXNCLEVBQWUsMkJBQTJCO0lBQ2hFLHlCQUF5QixFQUFZLDhCQUE4QjtJQUNuRSxnQkFBZ0IsRUFBcUIsb0JBQW9CO0lBQ3pELFlBQVksRUFBeUIsZ0JBQWdCO0lBQ3JELGtCQUFrQixFQUFtQix1QkFBdUI7SUFDNUQsS0FBSyxFQUFnQyxPQUFPO0lBQzVDLFNBQVMsRUFBNEIsV0FBVztJQUNoRCxPQUFPLEVBQThCLFNBQVM7SUFDOUMsUUFBUSxFQUE2QixXQUFXO0lBQ2hELGNBQWMsRUFBdUIsaUJBQWlCO0lBQ3RELGlCQUFpQixFQUFvQixvQkFBb0I7SUFDekQsc0JBQXNCLEVBQWUsMEJBQTBCO0lBQy9ELFVBQVUsRUFBMkIsYUFBYTtJQUNsRCxpQ0FBaUMsRUFBSSx3Q0FBd0M7SUFDN0UsUUFBUSxFQUE2QixVQUFVO0lBQy9DLG1DQUFtQyxFQUFFLDBDQUEwQztJQUMvRSxVQUFVLEVBQTJCLGFBQWE7SUFDbEQsVUFBVSxFQUEyQixhQUFhO0lBQ2xELGFBQWEsRUFBd0IsZ0JBQWdCO0lBQ3JELFdBQVcsRUFBMEIsZUFBZTtJQUNwRCxPQUFPLEVBQThCLFNBQVM7SUFDOUMsWUFBWSxFQUF5QixnQkFBZ0I7SUFDckQsZUFBZSxFQUFzQixtQkFBbUI7SUFDeEQsa0JBQWtCLEVBQW1CLHNCQUFzQjtJQUMzRCxlQUFlLEVBQXNCLG1CQUFtQjtJQUN4RCxNQUFNLEVBQStCLFFBQVE7Q0FDaEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFdBUk5JTkc6IHRoaXMgZmlsZSBpcyB1c2VkIGJ5IGJvdGggdGhlIGNsaWVudCBhbmQgdGhlIHNlcnZlci5cbi8vIERvIG5vdCB1c2UgYW55IGJyb3dzZXIgb3Igbm9kZS1zcGVjaWZpYyBBUEkhXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBkaXNwYXRjaEV2ZW50OiAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc3BhdGNoLWV2ZW50JyxcbiAgICBjbGljazogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NsaWNrJyxcbiAgICByaWdodENsaWNrOiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JpZ2h0LWNsaWNrJyxcbiAgICBkb3VibGVDbGljazogICAgICAgICAgICAgICAgICAgICAgICAgJ2RvdWJsZS1jbGljaycsXG4gICAgZHJhZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkcmFnJyxcbiAgICBkcmFnVG9FbGVtZW50OiAgICAgICAgICAgICAgICAgICAgICAgJ2RyYWctdG8tZWxlbWVudCcsXG4gICAgaG92ZXI6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdob3ZlcicsXG4gICAgc2Nyb2xsOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzY3JvbGwnLFxuICAgIHNjcm9sbEJ5OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2Nyb2xsLWJ5JyxcbiAgICBzY3JvbGxJbnRvVmlldzogICAgICAgICAgICAgICAgICAgICAgJ3Njcm9sbC1pbnRvLXZpZXcnLFxuICAgIHR5cGVUZXh0OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndHlwZS10ZXh0JyxcbiAgICBzZWxlY3RUZXh0OiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NlbGVjdC10ZXh0JyxcbiAgICBzZWxlY3RUZXh0QXJlYUNvbnRlbnQ6ICAgICAgICAgICAgICAgJ3NlbGVjdC10ZXh0LWFyZWEtY29udGVudCcsXG4gICAgc2VsZWN0RWRpdGFibGVDb250ZW50OiAgICAgICAgICAgICAgICdzZWxlY3QtZWRpdGFibGUtY29udGVudCcsXG4gICAgcHJlc3NLZXk6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwcmVzcy1rZXknLFxuICAgIHdhaXQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnd2FpdCcsXG4gICAgbmF2aWdhdGVUbzogICAgICAgICAgICAgICAgICAgICAgICAgICduYXZpZ2F0ZS10bycsXG4gICAgc2V0RmlsZXNUb1VwbG9hZDogICAgICAgICAgICAgICAgICAgICdzZXQtZmlsZXMtdG8tdXBsb2FkJyxcbiAgICBjbGVhclVwbG9hZDogICAgICAgICAgICAgICAgICAgICAgICAgJ2NsZWFyLXVwbG9hZCcsXG4gICAgZXhlY3V0ZUNsaWVudEZ1bmN0aW9uOiAgICAgICAgICAgICAgICdleGVjdXRlLWNsaWVudC1mdW5jdGlvbicsXG4gICAgZXhlY3V0ZVNlbGVjdG9yOiAgICAgICAgICAgICAgICAgICAgICdleGVjdXRlLXNlbGVjdG9yJyxcbiAgICB0YWtlU2NyZWVuc2hvdDogICAgICAgICAgICAgICAgICAgICAgJ3Rha2Utc2NyZWVuc2hvdCcsXG4gICAgdGFrZUVsZW1lbnRTY3JlZW5zaG90OiAgICAgICAgICAgICAgICd0YWtlLWVsZW1lbnQtc2NyZWVuc2hvdCcsXG4gICAgdGFrZVNjcmVlbnNob3RPbkZhaWw6ICAgICAgICAgICAgICAgICd0YWtlLXNjcmVlbnNob3Qtb24tZmFpbCcsXG4gICAgcHJlcGFyZUJyb3dzZXJNYW5pcHVsYXRpb246ICAgICAgICAgICdwcmVwYXJlLWJyb3dzZXItbWFuaXB1bGF0aW9uJyxcbiAgICBzaG93QXNzZXJ0aW9uUmV0cmllc1N0YXR1czogICAgICAgICAgJ3Nob3ctYXNzZXJ0aW9uLXJldHJpZXMtc3RhdHVzJyxcbiAgICBoaWRlQXNzZXJ0aW9uUmV0cmllc1N0YXR1czogICAgICAgICAgJ2hpZGUtYXNzZXJ0aW9uLXJldHJpZXMtc3RhdHVzJyxcbiAgICBzZXRCcmVha3BvaW50OiAgICAgICAgICAgICAgICAgICAgICAgJ3NldC1icmVha3BvaW50JyxcbiAgICByZXNpemVXaW5kb3c6ICAgICAgICAgICAgICAgICAgICAgICAgJ3Jlc2l6ZS13aW5kb3cnLFxuICAgIHJlc2l6ZVdpbmRvd1RvRml0RGV2aWNlOiAgICAgICAgICAgICAncmVzaXplLXdpbmRvdy10by1maXQtZGV2aWNlJyxcbiAgICBtYXhpbWl6ZVdpbmRvdzogICAgICAgICAgICAgICAgICAgICAgJ21heGltaXplLXdpbmRvdycsXG4gICAgc3dpdGNoVG9JZnJhbWU6ICAgICAgICAgICAgICAgICAgICAgICdzd2l0Y2gtdG8taWZyYW1lJyxcbiAgICBzd2l0Y2hUb01haW5XaW5kb3c6ICAgICAgICAgICAgICAgICAgJ3N3aXRjaC10by1tYWluLXdpbmRvdycsXG4gICAgb3BlbldpbmRvdzogICAgICAgICAgICAgICAgICAgICAgICAgICdvcGVuLXdpbmRvdycsXG4gICAgY2xvc2VXaW5kb3c6ICAgICAgICAgICAgICAgICAgICAgICAgICdjbG9zZS13aW5kb3cnLFxuICAgIGdldEN1cnJlbnRXaW5kb3c6ICAgICAgICAgICAgICAgICAgICAnZ2V0LWN1cnJlbnQtd2luZG93JyxcbiAgICBnZXRDdXJyZW50V2luZG93czogICAgICAgICAgICAgICAgICAgJ2dldC1jdXJyZW50LXdpbmRvd3MnLFxuICAgIGdldEN1cnJlbnRDRFBTZXNzaW9uOiAgICAgICAgICAgICAgICAnZ2V0LWN1cnJlbnQtYy1kLXAtc2Vzc2lvbicsXG4gICAgc3dpdGNoVG9XaW5kb3c6ICAgICAgICAgICAgICAgICAgICAgICdzd2l0Y2gtdG8td2luZG93JyxcbiAgICBzd2l0Y2hUb1dpbmRvd0J5UHJlZGljYXRlOiAgICAgICAgICAgJ3N3aXRjaC10by13aW5kb3ctYnktcHJlZGljYXRlJyxcbiAgICBzd2l0Y2hUb1BhcmVudFdpbmRvdzogICAgICAgICAgICAgICAgJ3N3aXRjaC10by1wYXJlbnQtd2luZG93JyxcbiAgICBzd2l0Y2hUb1ByZXZpb3VzV2luZG93OiAgICAgICAgICAgICAgJ3N3aXRjaC10by1wcmV2aW91cy13aW5kb3cnLFxuICAgIHNldE5hdGl2ZURpYWxvZ0hhbmRsZXI6ICAgICAgICAgICAgICAnc2V0LW5hdGl2ZS1kaWFsb2ctaGFuZGxlcicsXG4gICAgZ2V0TmF0aXZlRGlhbG9nSGlzdG9yeTogICAgICAgICAgICAgICdnZXQtbmF0aXZlLWRpYWxvZy1oaXN0b3J5JyxcbiAgICBnZXRCcm93c2VyQ29uc29sZU1lc3NhZ2VzOiAgICAgICAgICAgJ2dldC1icm93c2VyLWNvbnNvbGUtbWVzc2FnZXMnLFxuICAgIGdldEFjdGl2ZUVsZW1lbnQ6ICAgICAgICAgICAgICAgICAgICAnZ2V0LWFjdGl2ZS1lbGVtZW50JyxcbiAgICBzZXRUZXN0U3BlZWQ6ICAgICAgICAgICAgICAgICAgICAgICAgJ3NldC10ZXN0LXNwZWVkJyxcbiAgICBzZXRQYWdlTG9hZFRpbWVvdXQ6ICAgICAgICAgICAgICAgICAgJ3NldC1wYWdlLWxvYWQtdGltZW91dCcsXG4gICAgZGVidWc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkZWJ1ZycsXG4gICAgYXNzZXJ0aW9uOiAgICAgICAgICAgICAgICAgICAgICAgICAgICdhc3NlcnRpb24nLFxuICAgIHVzZVJvbGU6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndXNlUm9sZScsXG4gICAgdGVzdERvbmU6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXN0LWRvbmUnLFxuICAgIGJhY2t1cFN0b3JhZ2VzOiAgICAgICAgICAgICAgICAgICAgICAnYmFja3VwLXN0b3JhZ2VzJyxcbiAgICBleGVjdXRlRXhwcmVzc2lvbjogICAgICAgICAgICAgICAgICAgJ2V4ZWN1dGUtZXhwcmVzc2lvbicsXG4gICAgZXhlY3V0ZUFzeW5jRXhwcmVzc2lvbjogICAgICAgICAgICAgICdleGVjdXRlLWFzeW5jLWV4cHJlc3Npb24nLFxuICAgIHVubG9ja1BhZ2U6ICAgICAgICAgICAgICAgICAgICAgICAgICAndW5sb2NrLXBhZ2UnLFxuICAgIGNsb3NlQ2hpbGRXaW5kb3dPbkZpbGVEb3dubG9hZGluZzogICAnY2xvc2UtY2hpbGQtd2luZG93LW9uLWZpbGUtZG93bmxvYWRpbmcnLFxuICAgIHJlY29yZGVyOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAncmVjb3JkZXInLFxuICAgIHByZXBhcmVDbGllbnRFbnZpcm9ubWVudEluRGVidWdNb2RlOiAncHJlcGFyZS1jbGllbnQtZW52aXJvbm1lbnQtaW4tZGVidWctbW9kZScsXG4gICAgZ2V0Q29va2llczogICAgICAgICAgICAgICAgICAgICAgICAgICdnZXQtY29va2llcycsXG4gICAgc2V0Q29va2llczogICAgICAgICAgICAgICAgICAgICAgICAgICdzZXQtY29va2llcycsXG4gICAgZGVsZXRlQ29va2llczogICAgICAgICAgICAgICAgICAgICAgICdkZWxldGUtY29va2llcycsXG4gICAgZ2V0UHJveHlVcmw6ICAgICAgICAgICAgICAgICAgICAgICAgICdnZXQtcHJveHktdXJsJyxcbiAgICByZXF1ZXN0OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JlcXVlc3QnLFxuICAgIHNraXBKc0Vycm9yczogICAgICAgICAgICAgICAgICAgICAgICAnc2tpcC1qcy1lcnJvcnMnLFxuICAgIGFkZFJlcXVlc3RIb29rczogICAgICAgICAgICAgICAgICAgICAnYWRkLXJlcXVlc3QtaG9va3MnLFxuICAgIHJlbW92ZVJlcXVlc3RIb29rczogICAgICAgICAgICAgICAgICAncmVtb3ZlLXJlcXVlc3QtaG9va3MnLFxuICAgIHJ1bkN1c3RvbUFjdGlvbjogICAgICAgICAgICAgICAgICAgICAncnVuLWN1c3RvbS1hY3Rpb24nLFxuICAgIHJlcG9ydDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncmVwb3J0Jyxcbn07XG4iXX0=